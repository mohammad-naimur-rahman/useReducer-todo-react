{"version":3,"sources":["Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","dispatch","id","name","complete","className","style","color","textDecoration","type","cursor","onChange","ACTIONS","TOGGLE_TODO","payload","htmlFor","onClick","DELETE_TODO","ADD_TODO","App","newTodo","Date","now","useReducer","todos","action","map","filter","useState","setName","maxWidth","onSubmit","e","preventDefault","value","target","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAmBeA,EAhBF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACVC,EAAuBF,EAAvBE,GAAIC,EAAmBH,EAAnBG,KAAMC,EAAaJ,EAAbI,SAClB,OACI,sBAAKC,UAAU,yDAAf,UACI,oBAAIC,MAAOF,EAAW,CAAEG,MAAO,OAAQC,eAAgB,gBAAmB,CAAED,MAAO,QAAnF,SAA8FJ,IAC9F,sBAAKE,UAAU,4BAAf,UACI,sBAAKA,UAAU,OAAf,UACI,uBAAOI,KAAK,WAAWN,KAAK,OAAOD,GAAG,OAAOG,UAAU,eAAeC,MAAO,CAAEI,OAAQ,WAAaC,SAAU,kBAAMV,EAAS,CAAEQ,KAAMG,EAAQC,YAAaC,QAAS,CAAEZ,GAAIA,QACzK,uBAAOa,QAAQ,OAAOV,UAAU,eAAeC,MAAO,CAAEI,OAAQ,WAAhE,qBAEJ,wBAAQL,UAAU,yBAAyBW,QAAS,kBAAMf,EAAS,CAAEQ,KAAMG,EAAQK,YAAaH,QAAS,CAAEZ,GAAIA,MAA/G,2BCVHU,EAAU,CACnBM,SAAU,WACVL,YAAa,cACbI,YAAa,eAsDFE,EAnDH,WAER,IAkBMC,EAAU,SAACjB,GACb,MAAO,CACHD,GAAImB,KAAKC,MACTnB,KAAMA,EACNC,UAAU,IAxBJ,EA2BYmB,sBAzBV,SAACC,EAAOC,GACpB,OAAQA,EAAOhB,MACX,KAAKG,EAAQM,SACT,MAAM,GAAN,mBAAWM,GAAX,CAAkBJ,EAAQK,EAAOX,QAAQX,QAC7C,KAAKS,EAAQC,YACT,OAAOW,EAAME,KAAI,SAAA1B,GACb,OAAIA,EAAKE,KAAOuB,EAAOX,QAAQZ,GACpB,2BAAKF,GAAZ,IAAkBI,UAAWJ,EAAKI,WAE/BJ,KAEf,KAAKY,EAAQK,YACT,OAAOO,EAAMG,QAAO,SAAA3B,GAAI,OAAIA,EAAKE,KAAOuB,EAAOX,QAAQZ,MAC3D,QACI,OAAOsB,KAW2B,IA3BhC,mBA2BPA,EA3BO,KA2BAvB,EA3BA,OA4BU2B,mBAAS,IA5BnB,mBA4BPzB,EA5BO,KA4BD0B,EA5BC,KAoCd,OACI,sBAAKxB,UAAU,4BAA4BC,MAAO,CAAEwB,SAAU,SAA9D,UACI,uBAAMC,SARO,SAACC,GAClBA,EAAEC,iBACFhC,EAAS,CAAEQ,KAAMG,EAAQM,SAAUJ,QAAS,CAAEX,KAAMA,KACpD0B,EAAQ,KAKJ,UACI,oBAAIxB,UAAU,oBAAd,wCACA,uBAAOA,UAAU,eAAeI,KAAK,OAAOyB,MAAO/B,EAAMQ,SAAU,SAAAqB,GAAC,OAAIH,EAAQG,EAAEG,OAAOD,QAAQE,YAAY,wBAEjH,oBAAI/B,UAAU,OAAd,SAEQmB,EAAME,KAAI,SAAA1B,GAAI,OAAI,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,SAAUA,GAA/BD,EAAKE,aCzCvCmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4a336033.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ACTIONS } from './App.js';\r\n\r\nconst Todo = ({ todo, dispatch }) => {\r\n    const { id, name, complete } = todo;\r\n    return (\r\n        <div className='d-flex align-items-center justify-content-between py-1'>\r\n            <li style={complete ? { color: '#AAA', textDecoration: 'line-through' } : { color: '#000' }}>{name}</li>\r\n            <div className='d-flex align-items-center'>\r\n                <div className='mx-1'>\r\n                    <input type=\"checkbox\" name='done' id='done' className='text-success' style={{ cursor: 'pointer' }} onChange={() => dispatch({ type: ACTIONS.TOGGLE_TODO, payload: { id: id } })} />\r\n                    <label htmlFor=\"done\" className='text-success' style={{ cursor: 'pointer' }}>Done</label>\r\n                </div>\r\n                <button className=\"btn btn-outline-danger\" onClick={() => dispatch({ type: ACTIONS.DELETE_TODO, payload: { id: id } })} >Delete</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;","import React, { useReducer, useState } from 'react';\r\nimport Todo from './Todo';\r\n\r\nexport const ACTIONS = {\r\n    ADD_TODO: 'add-todo',\r\n    TOGGLE_TODO: 'toggle-todo',\r\n    DELETE_TODO: 'delete-todo'\r\n}\r\n\r\nconst App = () => {\r\n\r\n    const reducer = (todos, action) => {\r\n        switch (action.type) {\r\n            case ACTIONS.ADD_TODO:\r\n                return [...todos, newTodo(action.payload.name)]\r\n            case ACTIONS.TOGGLE_TODO:\r\n                return todos.map(todo => {\r\n                    if (todo.id === action.payload.id) {\r\n                        return { ...todo, complete: !todo.complete }\r\n                    }\r\n                    return todo;\r\n                })\r\n            case ACTIONS.DELETE_TODO:\r\n                return todos.filter(todo => todo.id !== action.payload.id)\r\n            default:\r\n                return todos;\r\n        }\r\n    }\r\n\r\n    const newTodo = (name) => {\r\n        return {\r\n            id: Date.now(),\r\n            name: name,\r\n            complete: false\r\n        }\r\n    }\r\n    const [todos, dispatch] = useReducer(reducer, []);\r\n    const [name, setName] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: ACTIONS.ADD_TODO, payload: { name: name } })\r\n        setName('');\r\n    }\r\n\r\n    return (\r\n        <div className='p-5 m-5 shadow-lg mx-auto' style={{ maxWidth: '600px' }}>\r\n            <form onSubmit={handleSubmit}>\r\n                <h5 className='py-2 text-primary'>Todo list using useReducer</h5>\r\n                <input className='form-control' type=\"text\" value={name} onChange={e => setName(e.target.value)} placeholder='Add a task to do' />\r\n            </form>\r\n            <ol className='pt-3'>\r\n                {\r\n                    todos.map(todo => <Todo key={todo.id} todo={todo} dispatch={dispatch} />)\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}